{
  "version": 3,
  "sources": ["<stdin>", "../../node_modules/@remix-run/dev/compiler/shims/react.ts", "../../app/entry.server.tsx", "/Users/chadoakenfold/Documents/Code/SongToAlbumPlaylist/Code/s2ap-vercel/app/root.tsx", "/Users/chadoakenfold/Documents/Code/SongToAlbumPlaylist/Code/s2ap-vercel/app/routes/s2ap/authorize/spotify.callback.tsx", "../../app/models/auth.server.ts", "../../app/session.server.ts", "../../app/service/db.server.ts", "../../app/models/user.server.ts", "/Users/chadoakenfold/Documents/Code/SongToAlbumPlaylist/Code/s2ap-vercel/app/routes/s2ap/authorize/spotify.tsx", "/Users/chadoakenfold/Documents/Code/SongToAlbumPlaylist/Code/s2ap-vercel/app/routes/s2ap/healthcheck.tsx", "/Users/chadoakenfold/Documents/Code/SongToAlbumPlaylist/Code/s2ap-vercel/app/routes/s2ap/dashboard.tsx", "../../app/components/MiniForm.tsx", "/Users/chadoakenfold/Documents/Code/SongToAlbumPlaylist/Code/s2ap-vercel/app/routes/s2ap/create.tsx", "../../app/service/spotify.api.server.ts", "/Users/chadoakenfold/Documents/Code/SongToAlbumPlaylist/Code/s2ap-vercel/app/routes/s2ap/logout.tsx", "/Users/chadoakenfold/Documents/Code/SongToAlbumPlaylist/Code/s2ap-vercel/app/routes/s2ap/index.tsx", "../../app/components/track/index.tsx", "/Users/chadoakenfold/Documents/Code/SongToAlbumPlaylist/Code/s2ap-vercel/app/routes/index.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as React from \"react\";\nexport { React };\n", "import type { EntryContext } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport { renderToString } from \"react-dom/server\";\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  const markup = renderToString(\n    <RemixServer context={remixContext} url={request.url} />\n  );\n\n  responseHeaders.set(\"Content-Type\", \"text/html\");\n\n  return new Response(\"<!DOCTYPE html>\" + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  });\n}\n", "import type { LinksFunction, MetaFunction } from \"@remix-run/node\";\n\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n} from \"@remix-run/react\";\n\nimport tailwindStylesheetUrl from \"./styles/tailwind.css\";\n\nexport const links: LinksFunction = () => {\n  return [{ rel: \"stylesheet\", href: tailwindStylesheetUrl }];\n};\n\nexport const meta: MetaFunction = () => ({\n  charset: \"utf-8\",\n  title: \"S2ap\",\n  viewport: \"width=device-width,initial-scale=1\",\n});\n\nexport default function App() {\n  return (\n    <html lang=\"en\" className=\"h-full\">\n      <head>\n        <Meta />\n        <Links />\n      </head>\n      <body\n        className=\"h-full bg-white text-slate-500 antialiased dark:bg-slate-900 dark:text-slate-400\"\n        data-testid=\"app.root\"\n      >\n        <Outlet />\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>\n  );\n}\n", "import type { LoaderFunction } from \"@remix-run/node\";\nimport { authenticator } from \"~/models/auth.server\";\n\nexport const loader: LoaderFunction = ({ request }) => {\n  return authenticator.authenticate(\"spotify\", request, {\n    successRedirect: \"/s2ap\",\n  });\n};\n", "import { Authenticator } from \"remix-auth\";\nimport { SpotifyStrategy } from \"remix-auth-spotify\";\n\nimport { sessionStorage } from \"~/session.server\";\n\nimport invariant from \"tiny-invariant\";\n\nimport { getUserBySpotifyId, createUser } from \"~/models/user.server\";\n\ninvariant(process.env.SPOTIFY_CLIENT_ID, \"Missing SPOTIFY_CLIENT_ID env\");\ninvariant(\n  process.env.SPOTIFY_CLIENT_SECRET,\n  \"Missing SPOTIFY_CLIENT_SECRET env\"\n);\ninvariant(process.env.SPOTIFY_CALLBACK_URL, \"Missing SPOTIFY_CALLBACK_URL env\");\n\n// See https://developer.spotify.com/documentation/general/guides/authorization/scopes\nconst scopes = [\n  \"user-read-currently-playing\",\n  \"playlist-read-private\",\n  \"playlist-read-collaborative\",\n  \"playlist-modify-public\",\n  \"playlist-modify-private\",\n  \"user-read-email\",\n].join(\" \");\n\nexport const spotifyStrategy = new SpotifyStrategy(\n  {\n    clientID: process.env.SPOTIFY_CLIENT_ID,\n    clientSecret: process.env.SPOTIFY_CLIENT_SECRET,\n    callbackURL: process.env.SPOTIFY_CALLBACK_URL,\n    sessionStorage,\n    scope: scopes,\n  },\n  async ({ accessToken, refreshToken, extraParams, profile }) => {\n    // Get/Create user\n    let user = await getUserBySpotifyId(profile.id);\n    if (!user) {\n      user = await createUser({\n        email: profile.__json.email,\n        displayName: profile.displayName,\n        spotifyId: profile.id,\n      });\n    }\n\n    return {\n      accessToken,\n      refreshToken,\n      expiresAt: Date.now() + extraParams.expiresIn * 1000,\n      tokenType: extraParams.tokenType,\n      user: {\n        id: user ? user.spotifyId : \"\",\n        email: user ? user.email : \"\",\n        name: user ? user.displayName : \"\",\n      },\n    };\n  }\n);\n\nexport const authenticator = new Authenticator(sessionStorage, {\n  sessionKey: spotifyStrategy.sessionKey,\n  sessionErrorKey: spotifyStrategy.sessionErrorKey,\n});\n\nauthenticator.use(spotifyStrategy);\n", "import { createCookieSessionStorage, redirect } from \"@remix-run/node\";\nimport invariant from \"tiny-invariant\";\n\ninvariant(process.env.SESSION_SECRET, \"SESSION_SECRET must be set\");\n\nexport const sessionStorage = createCookieSessionStorage({\n  cookie: {\n    name: \"__session\",\n    sameSite: \"lax\",\n    path: \"/\",\n    httpOnly: true,\n    secrets: [process.env.SESSION_SECRET],\n    secure: process.env.NODE_ENV === \"production\",\n  },\n});\n\nexport const { getSession, commitSession, destroySession } = sessionStorage;\n\nfunction getUserSession(request: Request) {\n  return sessionStorage.getSession(request.headers.get(\"Cookie\"));\n}\nexport async function logout(request: Request) {\n  const session = await getUserSession(request);\n  return redirect(\"/s2ap\", {\n    headers: {\n      \"Set-Cookie\": await sessionStorage.destroySession(session),\n    },\n  });\n}\n", "import { PrismaClient } from \"@prisma/client\";\n\nlet db: PrismaClient;\n\ndeclare global {\n  var __db: PrismaClient | undefined;\n}\n\n// this is needed because in development we don't want to restart\n// the server with every change, but we want to make sure we don't\n// create a new connection to the DB with every change either.\nif (process.env.NODE_ENV === \"production\") {\n  db = new PrismaClient();\n} else {\n  if (!global.__db) {\n    global.__db = new PrismaClient();\n  }\n  db = global.__db;\n}\n\nexport { db };\n", "import type { User } from \"@prisma/client\";\nimport { db } from \"~/service/db.server\";\n\nexport type { User } from \"@prisma/client\";\n\nexport async function getUserBySpotifyId(spotifyId: User[\"spotifyId\"]) {\n  return db.user.findUnique({ where: { spotifyId } });\n}\nexport async function getAllUsers() {\n  return db.user.findMany();\n}\n\nexport async function getUserByEmail(email: User[\"email\"]) {\n  return db.user.findUnique({ where: { email } });\n}\nexport interface CreateUserInput {\n  email: User[\"email\"];\n  displayName: User[\"displayName\"];\n  spotifyId: User[\"spotifyId\"];\n}\nexport async function createUser({\n  email,\n  displayName,\n  spotifyId,\n}: CreateUserInput) {\n  return db.user.create({\n    data: {\n      email,\n      displayName,\n      spotifyId,\n    },\n  });\n}\n\nexport async function deleteUserByEmail(email: User[\"email\"]) {\n  return db.user.delete({ where: { email } });\n}\n\nexport async function deleteUserBySpotifyId(spotifyId: User[\"spotifyId\"]) {\n  return db.user.delete({ where: { spotifyId } });\n}\n", "import type { ActionFunction } from \"@remix-run/node\";\nimport { authenticator } from \"~/models/auth.server\";\n\nexport const action: ActionFunction = async ({ request }) => {\n  return await authenticator.authenticate(\"spotify\", request);\n};\n", "import type { LoaderFunction } from \"@remix-run/node\";\n\nimport { db } from \"~/service/db.server\";\n\nexport const requiredEnvVars = () => {\n  return new Promise((resolve, reject) => {\n    const requiredEnvs = [\n      \"DATABASE_URL\",\n      \"SESSION_SECRET\",\n      \"SPOTIFY_CLIENT_ID\",\n      \"SPOTIFY_CLIENT_SECRET\",\n      \"SPOTIFY_CALLBACK_URL\",\n    ];\n    interface RequiredEnvAccumulator {\n      name: string;\n      message: string;\n    }\n    const reducedRequiredEnvs = requiredEnvs.reduce((accumulator, envName) => {\n      const envValue = process.env[envName];\n      if (envValue === undefined) {\n        accumulator.push({\n          name: envName,\n          message: `\\`${envName}\\` is undefined`,\n        });\n      }\n      return accumulator;\n    }, [] as RequiredEnvAccumulator[]);\n    if (reducedRequiredEnvs.length > 0) {\n      return reject(reducedRequiredEnvs);\n    }\n\n    return resolve(undefined);\n  });\n};\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const host =\n    request.headers.get(\"X-Forwarded-Host\") ?? request.headers.get(\"host\");\n\n  try {\n    const url = new URL(\"/\", `http://${host}`);\n    await Promise.all([\n      // if the required env vars are set,\n      requiredEnvVars(),\n      // connect to the database to make a simple query,\n      db.user.count(),\n      // and make a HEAD request to ourselves\n      fetch(url.toString(), { method: \"HEAD\" }).then((r) => {\n        if (!r.ok) return Promise.reject(r);\n      }),\n    ]);\n    // we should be good!\n    return new Response(\"OK\");\n  } catch (error: unknown) {\n    console.log(\"healthcheck \u274C\", { error });\n    return new Response(\"ERROR\", { status: 500 });\n  }\n};\n", "import type { ActionFunction, LoaderFunction } from \"@remix-run/node\";\nimport { redirect } from \"@remix-run/node\";\nimport { useLoaderData } from \"@remix-run/react\";\n\nimport { spotifyStrategy } from \"~/models/auth.server\";\n\nimport { MiniForm } from \"~/components/MiniForm\";\nimport {\n  getAllUsers,\n  getUserBySpotifyId,\n  deleteUserBySpotifyId,\n} from \"~/models/user.server\";\nimport type { User } from \"~/models/user.server\";\n\nexport interface LoaderOutput {\n  displayName: User[\"displayName\"];\n  email: User[\"email\"];\n  spotifyId: User[\"spotifyId\"];\n}\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const session = await spotifyStrategy.getSession(request);\n\n  if (session?.user?.id !== \"c_oak\") {\n    return redirect(\"/s2ap\");\n  }\n  const users = await getAllUsers();\n\n  return users;\n};\n\nexport const action: ActionFunction = async ({ request }) => {\n  const session = await spotifyStrategy.getSession(request);\n  if (session && session?.user?.id === \"c_oak\") {\n    const form = await request.formData();\n\n    const spotifyId = form.get(\"spotifyId\") as string | undefined;\n\n    if (spotifyId) {\n      const user = await getUserBySpotifyId(spotifyId);\n      if (user) {\n        const output = await deleteUserBySpotifyId(spotifyId);\n        const urlParam = output?.displayName\n          ? `?deleted=${output?.displayName}`\n          : \"\";\n        return redirect(`/s2ap/dashboard${urlParam}`);\n      }\n      return redirect(`/s2ap/dashboard?error=noUser`);\n    }\n  }\n};\n\nexport default function Create() {\n  const users = useLoaderData<LoaderOutput[]>();\n\n  return (\n    <main className=\"mx-16 my-16\">\n      <h1 className=\"font-light text-slate-900 dark:text-slate-50\">\n        Dashboard\n      </h1>\n\n      {users.map(({ displayName, email, spotifyId }) => {\n        return (\n          <div key={spotifyId}>\n            {displayName} - {email}{\" \"}\n            <MiniForm\n              isSubmitting={false}\n              method=\"post\"\n              inputs={[{ name: \"spotifyId\", value: spotifyId }]}\n            >\n              <button\n                className=\"dark:text-sky-40 font-bold tracking-tight text-sky-500 \"\n                type=\"submit\"\n              >\n                Delete\n              </button>\n            </MiniForm>\n          </div>\n        );\n      })}\n    </main>\n  );\n}\n", "import { Form } from \"@remix-run/react\";\nimport type { PropsWithChildren } from \"react\";\nexport interface MiniFormInput {\n  isSubmitting?: boolean;\n  inputs?: { name: string; value: string }[];\n  action?: string;\n  method?: \"get\" | \"post\";\n  keyPrefix?: string;\n}\nexport const MiniForm = (MiniFormInput: PropsWithChildren<MiniFormInput>) => {\n  const {\n    isSubmitting = false,\n    children,\n    inputs,\n    action,\n    method = \"get\",\n    keyPrefix,\n  } = MiniFormInput;\n  return (\n    <Form action={action} method={method}>\n      <fieldset disabled={isSubmitting}>\n        {inputs\n          ? inputs.map(({ name, value }) => {\n              return (\n                <input\n                  type=\"hidden\"\n                  name={name}\n                  value={value}\n                  key={`${keyPrefix ? keyPrefix : \"MiniForm\"}-${name}`}\n                />\n              );\n            })\n          : null}\n        {children}\n      </fieldset>\n    </Form>\n  );\n};\n", "import type { ActionFunction, LoaderFunction } from \"@remix-run/node\";\nimport { redirect } from \"@remix-run/node\";\nimport type { Session } from \"remix-auth-spotify\";\nimport { spotifyStrategy } from \"~/models/auth.server\";\n\nimport type { SimplifiedTrack, CurrentlyPlaying } from \"spotify-types\";\n\nimport {\n  currentlyPlaying,\n  playlistCreate,\n  playlistAdd,\n  albumGet,\n} from \"~/service/spotify.api.server\";\n\nexport interface LoaderOutput {\n  session: Session;\n  current?: CurrentlyPlaying;\n}\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const session = await spotifyStrategy.getSession(request);\n  let current = {};\n  if (session?.user) {\n    current = (await currentlyPlaying(session.accessToken)) || {};\n  }\n  return {\n    session,\n    current,\n  };\n};\n\nexport interface CreateAlbumPlaylistFromCurrentTrackInput {\n  accessToken: string;\n  userId: string;\n  userName: string;\n  trackTitle: string;\n  albumId: string;\n  albumTitle: string;\n}\n\nconst createAlbumPlaylistFromCurrentTrack = async ({\n  accessToken,\n  userId,\n  userName,\n  trackTitle,\n  albumId,\n  albumTitle,\n}: CreateAlbumPlaylistFromCurrentTrackInput) => {\n  let playlist = null;\n\n  const albumData = await albumGet({\n    accessToken,\n    albumId,\n  });\n  const albumArtists = albumData?.artists\n    ? albumData?.artists.map(({ name }) => name).join(\", \")\n    : undefined;\n\n  const albumTracks = albumData.tracks as unknown as Record<string, unknown>;\n  const albumTrackItems = albumTracks?.items as SimplifiedTrack[];\n\n  if (albumTrackItems) {\n    playlist = await playlistCreate({\n      accessToken,\n      description: `\uD83D\uDC4B This playlist was created for \"${userName}\" while \"${trackTitle}\" was playing \u2014 S2ap`,\n      name: `\uD83C\uDFA7 ${albumTitle} - ${albumArtists}`,\n      userId,\n    });\n\n    if (playlist.id) {\n      const playlistUpdated = await playlistAdd({\n        accessToken,\n        playlistId: playlist.id,\n        uris: albumTrackItems.map(({ uri }) => uri),\n      });\n      if (playlistUpdated.snapshot_id) {\n        return {\n          success: true,\n          playlistId: playlist.id,\n        };\n      }\n    }\n  }\n\n  return {\n    success: false,\n  };\n};\n\nexport const action: ActionFunction = async ({ request }) => {\n  const session = await spotifyStrategy.getSession(request);\n  if (session) {\n    const form = await request.formData();\n    const accessToken = session.accessToken;\n\n    const userId = form.get(\"userId\") as string | undefined;\n    const userName = form.get(\"userName\") as string | undefined;\n    const trackTitle = form.get(\"trackTitle\") as string | undefined;\n    const albumId = form.get(\"albumId\") as string | undefined;\n    const albumTitle = form.get(\"albumTitle\") as string | undefined;\n    if (\n      accessToken &&\n      userId &&\n      userName &&\n      trackTitle &&\n      albumId &&\n      albumTitle\n    ) {\n      const output = await createAlbumPlaylistFromCurrentTrack({\n        accessToken,\n        userId,\n        userName,\n        trackTitle,\n        albumId,\n        albumTitle,\n      });\n\n      const urlParam = output?.success\n        ? `?playlistId=${output.playlistId}`\n        : \"\";\n      return redirect(`/s2ap${urlParam}`);\n    }\n  }\n};\nexport default function Create() {\n  return (\n    <main className=\"mx-16 my-16\">\n      <h1 className=\"font-light text-slate-900 dark:text-slate-50\">Create</h1>\n    </main>\n  );\n}\n", "import type { Album, Playlist, CurrentlyPlaying } from \"spotify-types\";\n\nexport const SPOTIFY_API = \"https://api.spotify.com/v1\";\n\nexport interface CurrentlyPlayingOutput extends CurrentlyPlaying {\n  error?: { status: number };\n}\nexport const currentlyPlaying = async (\n  accessToken: string\n): Promise<CurrentlyPlayingOutput | null> => {\n  /*\n  NOTE: Required `scopes`:\n    user-read-currently-playing\n  */\n  const output = await fetch(`${SPOTIFY_API}/me/player/currently-playing`, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${accessToken}`,\n    },\n  }).then((response) => {\n    if (response.status === 204) {\n      return null;\n    }\n    return response.json();\n  });\n\n  return output;\n};\n\nexport interface PlaylistCreateInput {\n  accessToken: string;\n  description: string;\n  name: string;\n  userId: string;\n}\nexport const playlistCreate = async ({\n  accessToken,\n  description,\n  name,\n  userId,\n}: PlaylistCreateInput): Promise<Playlist> => {\n  /*\n  NOTE: Required `scopes`:\n    playlist-read-private\n    playlist-read-collaborative\n  */\n  const output = await fetch(`${SPOTIFY_API}/users/${userId}/playlists`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${accessToken}`,\n    },\n    body: JSON.stringify({\n      name,\n      description,\n    }),\n  }).then((response) => response.json());\n\n  return output;\n};\n\nexport interface PlaylistAddInput {\n  accessToken: string;\n  playlistId: string;\n  uris: string[];\n}\nexport const playlistAdd = async ({\n  accessToken,\n  playlistId,\n  uris,\n}: PlaylistAddInput): Promise<Playlist> => {\n  /*\n  NOTE: Required `scopes`:\n    playlist-modify-public\n    playlist-modify-private\n  */\n  const output = await fetch(`${SPOTIFY_API}/playlists/${playlistId}/tracks`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${accessToken}`,\n    },\n    body: JSON.stringify({\n      uris,\n    }),\n  }).then((response) => response.json());\n\n  return output;\n};\n\nexport interface AlbumGetInput {\n  accessToken: string;\n  albumId: string;\n}\nexport const albumGet = async ({\n  accessToken,\n  albumId,\n}: AlbumGetInput): Promise<Album> => {\n  /* \n    NOTE: No `scopes` required\n  */\n  const output = await fetch(`${SPOTIFY_API}/albums/${albumId}`, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${accessToken}`,\n    },\n  }).then((response) => response.json());\n\n  return output;\n};\n", "import type { LoaderFunction } from \"@remix-run/node\";\n\nimport { logout } from \"~/session.server\";\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  return logout(request);\n};\n\nexport default function Create() {\n  return <div>logging out</div>;\n}\n", "import type { LoaderFunction } from \"@remix-run/node\";\nimport { Form, useLoaderData, useTransition } from \"@remix-run/react\";\nimport type { Session } from \"remix-auth-spotify\";\nimport { spotifyStrategy } from \"~/models/auth.server\";\nimport { logout } from \"~/session.server\";\nimport type { CurrentlyPlaying } from \"spotify-types\";\n\nimport { currentlyPlaying } from \"~/service/spotify.api.server\";\nimport { Track } from \"~/components/track\";\nimport { MiniForm } from \"~/components/MiniForm\";\nexport interface LoaderOutput {\n  session: Session;\n  current: CurrentlyPlaying | null;\n  playlistId: string | undefined;\n  build: string | undefined;\n}\nexport const loader: LoaderFunction = async ({ request }) => {\n  const session = await spotifyStrategy.getSession(request);\n  const build = process.env.BUILD;\n  const url = new URL(request.url);\n  const playlistId = url.searchParams.get(\"playlistId\");\n\n  const current = session?.accessToken\n    ? await currentlyPlaying(session.accessToken)\n    : null;\n\n  if (current?.error?.status === 401) {\n    return await logout(request);\n  }\n\n  return {\n    session,\n    current,\n    playlistId,\n    build,\n  };\n};\n\nexport default function Index() {\n  const { session, current, playlistId, build } = useLoaderData<LoaderOutput>();\n  const user = session?.user;\n  const transition = useTransition();\n  const isSubmitting = transition.state === \"submitting\";\n\n  return (\n    <div className=\"flex justify-center p-8\">\n      <main className=\"w-full max-w-3xl\">\n        <div className=\"flex items-center justify-between space-x-4\">\n          <h1\n            className=\"font-light text-slate-900  dark:text-slate-50\"\n            title=\"Song to Album Playlist\"\n          >\n            S2ap\n          </h1>\n          {user ? (\n            <div className=\"flex items-center space-x-4\">\n              <a\n                href=\"/s2ap\"\n                className=\"dark:text-sky-40 tracking-tight text-sky-500 hover:text-sky-200\"\n              >\n                Reload\n              </a>\n\n              <MiniForm action=\"/s2ap/logout\">\n                <button\n                  className=\"dark:text-sky-40 tracking-tight text-sky-500 hover:text-sky-200\"\n                  type=\"submit\"\n                >\n                  Logout\n                </button>\n              </MiniForm>\n            </div>\n          ) : (\n            \"\"\n          )}{\" \"}\n        </div>\n        {!user ? (\n          <Form action=\"/s2ap/authorize/spotify\" method=\"post\">\n            <button className=\" dark:text-sky-40 tracking-tight tracking-tight text-sky-500 hover:text-sky-200 sm:text-4xl\">\n              Log in with Spotify\n            </button>\n          </Form>\n        ) : (\n          <>\n            <h1 className=\"text-3xl font-bold tracking-tight text-slate-900 dark:text-slate-50 sm:text-4xl \">\n              Hello{\" \"}\n              {user ? (\n                <strong className=\"font-extrabold\">{user.name}!</strong>\n              ) : (\n                \"\"\n              )}{\" \"}\n              \uD83D\uDC4B\n            </h1>\n            {current?.is_playing ? (\n              <Track\n                current={current}\n                isSubmitting={isSubmitting}\n                user={user}\n                playlistId={playlistId}\n              />\n            ) : (\n              <div>\n                <p className=\"py-8 text-slate-900 dark:text-slate-50\">\n                  \uD83D\uDE49 Play something in Spotify and then{\" \"}\n                  <a\n                    href=\"/s2ap\"\n                    className=\"dark:text-sky-40 font-bold tracking-tight text-sky-500 \"\n                  >\n                    reload\n                  </a>{\" \"}\n                  this page\n                </p>\n              </div>\n            )}\n          </>\n        )}\n        {build ? (\n          <small className=\"mt-16 mb-8 block bg-slate-900 text-right text-xs text-slate-800 \">\n            {build}\n          </small>\n        ) : null}\n      </main>\n    </div>\n  );\n}\n", "// import { useMachine } from \"@xstate/react\";\nimport type { Session } from \"remix-auth-spotify\";\nimport type {\n  CurrentlyPlaying,\n  Track as SpotifyTrack,\n  SimplifiedAlbum,\n} from \"spotify-types\";\nimport { MiniForm } from \"~/components/MiniForm\";\n// import { trackMachine } from \"./track.machine\";\nconst determineIfAlbum = (album: SimplifiedAlbum) => {\n  // Definitely an album\n  if (album?.album_type === \"album\" && album?.total_tracks > 2) {\n    return true;\n  }\n  // Compilation\n  if (album?.album_type === \"compilation\" && album?.total_tracks > 2) {\n    return true;\n  }\n  // Best guess...\n  if (\n    album?.album_type === \"single\" &&\n    album?.type === \"album\" &&\n    album?.total_tracks > 2\n  ) {\n    return true;\n  }\n  // Nope\n  return false;\n};\n\nexport interface TrackInput {\n  isSubmitting: boolean;\n  current: CurrentlyPlaying | null;\n  user: Session[\"user\"];\n  playlistId?: string;\n}\nexport function Track({ isSubmitting, current, user, playlistId }: TrackInput) {\n  // const [current, send] = useMachine(trackMachine);\n  // console.log(\"machine\", { current });\n  const item = current?.item as SpotifyTrack;\n  const trackTitle = item?.name;\n  const trackArtists = item\n    ? item?.artists.map(({ name }) => name).join(\", \")\n    : undefined;\n  const album = item?.album;\n  const isSongFromAlbum = determineIfAlbum(album);\n  const albumTitle = album?.name;\n  const albumId = album?.id;\n  const albumTracks = album?.total_tracks;\n  return (\n    <div className=\"py-4\">\n      {user && current && isSongFromAlbum ? (\n        <div className=\"py-4\">\n          <MiniForm\n            action=\"/s2ap/create\"\n            method=\"post\"\n            inputs={[\n              { name: \"userId\", value: user.id },\n              { name: \"userName\", value: user.name || \"\" },\n              { name: \"trackTitle\", value: trackTitle },\n              { name: \"albumId\", value: albumId },\n              { name: \"albumTitle\", value: albumTitle },\n            ]}\n          >\n            <button\n              type=\"submit\"\n              className=\"dark:highlight-white/20 flex h-14 w-full items-center justify-center rounded-lg bg-slate-900 px-6 text-xl font-semibold text-white hover:bg-slate-700 focus:outline-none focus:ring-2 focus:ring-slate-400 focus:ring-offset-2 focus:ring-offset-slate-50 dark:bg-sky-500 dark:hover:bg-sky-400 sm:w-auto\"\n            >\n              {!isSubmitting ? \"Create album playlist\" : null}\n              {isSubmitting ? \"\uD83D\uDEA7 Creating....\" : null}\n            </button>\n          </MiniForm>\n        </div>\n      ) : null}\n      {user && current && !isSongFromAlbum ? (\n        <div className=\"py-2\">\n          <div>\n            We think this is a single. The album has {albumTracks}{\" \"}\n            {albumTracks > 1 ? \"tracks\" : \"track\"}\n          </div>\n          <MiniForm\n            action=\"/s2ap/create\"\n            method=\"post\"\n            inputs={[\n              { name: \"userId\", value: user.id },\n              { name: \"userName\", value: user.name || \"\" },\n              { name: \"trackTitle\", value: trackTitle },\n              { name: \"albumId\", value: albumId },\n              { name: \"albumTitle\", value: albumTitle },\n            ]}\n          >\n            <button\n              type=\"submit\"\n              className=\"dark:text-sky-40 inline-block tracking-tight text-sky-500\"\n            >\n              {!isSubmitting ? \"Make a playlist anyway?\" : null}\n              {isSubmitting ? \"Creating...\" : null}\n            </button>\n          </MiniForm>\n        </div>\n      ) : null}\n      {playlistId ? (\n        <div className=\"pb-4 font-light text-slate-900 dark:text-slate-50\">\n          <a href={`https://open.spotify.com/playlist/${playlistId}`}>\n            \u2705 {`https://open.spotify.com/playlist/${playlistId}`}\n          </a>\n        </div>\n      ) : null}\n\n      {current?.is_playing ? (\n        <>\n          <h2 className=\"font-semibold text-indigo-500 dark:text-indigo-400\">\n            Currently listening to\n          </h2>\n          <ul>\n            <li className=\"text-3xl font-extrabold tracking-tight text-slate-900 dark:text-slate-50 sm:text-4xl\">\n              {trackTitle}\n            </li>\n            {trackArtists ? (\n              <li className=\"max-w-3xl space-y-6\">{trackArtists}</li>\n            ) : null}\n\n            {album?.images ? (\n              <li className=\"py-4\">\n                <img\n                  src={album.images[0].url}\n                  width={album.images[0].width || undefined}\n                  height={album.images[0].height || undefined}\n                  alt={item ? `Album art for ${albumTitle}` : \"\"}\n                />\n              </li>\n            ) : null}\n          </ul>\n        </>\n      ) : (\n        <div className=\"py-4\">Not listening to anything at the moment</div>\n      )}\n    </div>\n  );\n}\n", "import type { LoaderFunction } from \"@remix-run/node\";\nimport { useLoaderData } from \"@remix-run/react\";\n\nexport interface LoaderOutput {\n  build: string | undefined;\n}\nexport const loader: LoaderFunction = async ({ request }) => {\n  const build = process.env.BUILD;\n\n  return {\n    build,\n  };\n};\nexport default function Index() {\n  const { build } = useLoaderData<LoaderOutput>();\n  return (\n    <div className=\"flex justify-center p-8\">\n      <main className=\"w-full max-w-3xl\">\n        <h1\n          className=\"font-light text-slate-900  dark:text-slate-50\"\n          title=\"Song to Album Playlist\"\n        >\n          S2ap!\n        </h1>\n\n        <a\n          href=\"s2ap\"\n          className=\" dark:text-sky-40 tracking-tight tracking-tight text-sky-500 hover:text-sky-200 sm:text-4xl\"\n        >\n          When I listen to Spotify, often a song comes on that I dig and I click\n          through to the album details. If it's an album (and not a single) I'll\n          create a playlist that I add to an `In Coming` folder. This is too\n          cumbersome \u2014 I created an app which has a button that does (almost*)\n          all of the aforementioned steps, come see\n        </a>\n        <div>\n          <small>\n            * Currently, Spotify doesn't allow apps to create playlists inside\n            of folders\n          </small>\n          {build ? (\n            <small className=\"mt-16 mb-8 block bg-slate-900 text-right text-xs text-slate-800 \">\n              {build}\n            </small>\n          ) : null}\n        </div>\n      </main>\n    </div>\n  );\n}\n", "export default {'version':'994cbad6','entry':{'module':'/build.s2ap/entry.client-POWKEXTE.js','imports':['/build.s2ap/_shared/chunk-DWSQRD4J.js','/build.s2ap/_shared/chunk-6BO74FWO.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build.s2ap/root-OSNGJTEI.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build.s2ap/routes/index-DCWWRODZ.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/s2ap/authorize/spotify':{'id':'routes/s2ap/authorize/spotify','parentId':'root','path':'s2ap/authorize/spotify','index':undefined,'caseSensitive':undefined,'module':'/build.s2ap/routes/s2ap/authorize/spotify-VUZYJC6T.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/s2ap/authorize/spotify.callback':{'id':'routes/s2ap/authorize/spotify.callback','parentId':'root','path':'s2ap/authorize/spotify/callback','index':undefined,'caseSensitive':undefined,'module':'/build.s2ap/routes/s2ap/authorize/spotify.callback-626IVBA6.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/s2ap/create':{'id':'routes/s2ap/create','parentId':'root','path':'s2ap/create','index':undefined,'caseSensitive':undefined,'module':'/build.s2ap/routes/s2ap/create-T75RJAY4.js','imports':['/build.s2ap/_shared/chunk-ZVJXL2KF.js','/build.s2ap/_shared/chunk-IX3USF6X.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/s2ap/dashboard':{'id':'routes/s2ap/dashboard','parentId':'root','path':'s2ap/dashboard','index':undefined,'caseSensitive':undefined,'module':'/build.s2ap/routes/s2ap/dashboard-CLELNWCH.js','imports':['/build.s2ap/_shared/chunk-O7EGGWM3.js','/build.s2ap/_shared/chunk-IX3USF6X.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/s2ap/healthcheck':{'id':'routes/s2ap/healthcheck','parentId':'root','path':'s2ap/healthcheck','index':undefined,'caseSensitive':undefined,'module':'/build.s2ap/routes/s2ap/healthcheck-ZK63EQIF.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/s2ap/index':{'id':'routes/s2ap/index','parentId':'root','path':'s2ap','index':true,'caseSensitive':undefined,'module':'/build.s2ap/routes/s2ap/index-JVG6P3O5.js','imports':['/build.s2ap/_shared/chunk-O7EGGWM3.js','/build.s2ap/_shared/chunk-ZVJXL2KF.js','/build.s2ap/_shared/chunk-IX3USF6X.js','/build.s2ap/_shared/chunk-ME5PAYV3.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/s2ap/logout':{'id':'routes/s2ap/logout','parentId':'root','path':'s2ap/logout','index':undefined,'caseSensitive':undefined,'module':'/build.s2ap/routes/s2ap/logout-7QTEXJ2U.js','imports':['/build.s2ap/_shared/chunk-ME5PAYV3.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build.s2ap/manifest-994CBAD6.js'};", "\nimport * as entryServer from \"/Users/chadoakenfold/Documents/Code/SongToAlbumPlaylist/Code/s2ap-vercel/app/entry.server.tsx\";\nimport * as route0 from \"/Users/chadoakenfold/Documents/Code/SongToAlbumPlaylist/Code/s2ap-vercel/app/root.tsx\";\nimport * as route1 from \"/Users/chadoakenfold/Documents/Code/SongToAlbumPlaylist/Code/s2ap-vercel/app/routes/s2ap/authorize/spotify.callback.tsx\";\nimport * as route2 from \"/Users/chadoakenfold/Documents/Code/SongToAlbumPlaylist/Code/s2ap-vercel/app/routes/s2ap/authorize/spotify.tsx\";\nimport * as route3 from \"/Users/chadoakenfold/Documents/Code/SongToAlbumPlaylist/Code/s2ap-vercel/app/routes/s2ap/healthcheck.tsx\";\nimport * as route4 from \"/Users/chadoakenfold/Documents/Code/SongToAlbumPlaylist/Code/s2ap-vercel/app/routes/s2ap/dashboard.tsx\";\nimport * as route5 from \"/Users/chadoakenfold/Documents/Code/SongToAlbumPlaylist/Code/s2ap-vercel/app/routes/s2ap/create.tsx\";\nimport * as route6 from \"/Users/chadoakenfold/Documents/Code/SongToAlbumPlaylist/Code/s2ap-vercel/app/routes/s2ap/logout.tsx\";\nimport * as route7 from \"/Users/chadoakenfold/Documents/Code/SongToAlbumPlaylist/Code/s2ap-vercel/app/routes/s2ap/index.tsx\";\nimport * as route8 from \"/Users/chadoakenfold/Documents/Code/SongToAlbumPlaylist/Code/s2ap-vercel/app/routes/index.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/s2ap/authorize/spotify.callback\": {\n      id: \"routes/s2ap/authorize/spotify.callback\",\n      parentId: \"root\",\n      path: \"s2ap/authorize/spotify/callback\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/s2ap/authorize/spotify\": {\n      id: \"routes/s2ap/authorize/spotify\",\n      parentId: \"root\",\n      path: \"s2ap/authorize/spotify\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/s2ap/healthcheck\": {\n      id: \"routes/s2ap/healthcheck\",\n      parentId: \"root\",\n      path: \"s2ap/healthcheck\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/s2ap/dashboard\": {\n      id: \"routes/s2ap/dashboard\",\n      parentId: \"root\",\n      path: \"s2ap/dashboard\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/s2ap/create\": {\n      id: \"routes/s2ap/create\",\n      parentId: \"root\",\n      path: \"s2ap/create\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/s2ap/logout\": {\n      id: \"routes/s2ap/logout\",\n      parentId: \"root\",\n      path: \"s2ap/logout\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/s2ap/index\": {\n      id: \"routes/s2ap/index\",\n      parentId: \"root\",\n      path: \"s2ap\",\n      index: true,\n      caseSensitive: undefined,\n      module: route7\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route8\n    }\n  };"],
  "mappings": "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",
  "names": []
}
